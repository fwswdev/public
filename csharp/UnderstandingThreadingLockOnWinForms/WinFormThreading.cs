using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ThreadGui
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }


        

        private void Form1_KeyDown(object sender, KeyEventArgs e)
        {
            //LockingUsingVolatileVariable();
            //LockingUsingDotNetLock();
            //LockingUsingDotNetLockOnAnotherThread();
            LockingUsingTryMonitorOnAnotherThread();
        }



//-######-----------------------------------------#-----#--------------------------------------------------------#######---------------------######----------------
//-#-----#-#--####--#####--#--------##---#---#----##----#-#----#-#----#-#####--######-#####------####--#----#-------#----######-#----#-#####-#-----#--####--#----#-
//-#-----#-#-#------#----#-#-------#--#---#-#-----#-#---#-#----#-##--##-#----#-#------#----#----#----#-##---#-------#----#-------#--#----#---#-----#-#----#--#--#--
//-#-----#-#--####--#----#-#------#----#---#------#--#--#-#----#-#-##-#-#####--#####--#----#----#----#-#-#--#-------#----#####----##-----#---######--#----#---##---
//-#-----#-#------#-#####--#------######---#------#---#-#-#----#-#----#-#----#-#------#####-----#----#-#--#-#-------#----#--------##-----#---#-----#-#----#---##---
//-#-----#-#-#----#-#------#------#----#---#------#----##-#----#-#----#-#----#-#------#---#-----#----#-#---##-------#----#-------#--#----#---#-----#-#----#--#--#--
//-######--#--####--#------######-#----#---#------#-----#--####--#----#-#####--######-#----#-----####--#----#-------#----######-#----#---#---######---####--#----#-
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------


        public delegate void InvokeDelegate();

        // Display incrementing numbers on TextBox
        private void DisplayTextOnTextBox()
        {
            uithreadinprocess = true;

            InvokeDelegate d = delegate()
                {        
                    textBox1.AppendText(string.Format("Display {0}\r\n", ctr));
                    this.Refresh();
                };

            if (this.InvokeRequired)
                this.BeginInvoke(d);
            else
                d();

            Application.DoEvents(); // pump everything out of the message queue
            Thread.Sleep(750);
            Application.DoEvents(); // pump everything out of the message queue
            ctr++;
        }



//-#-----#------------------------------------------------#----------------------------
//-#-----#---##---#####--#---##---#####--#------######----#--------####---####--#----#-
//-#-----#--#--#--#----#-#--#--#--#----#-#------#---------#-------#----#-#----#-#---#--
//-#-----#-#----#-#----#-#-#----#-#####--#------#####-----#-------#----#-#------####---
//--#---#--######-#####--#-######-#----#-#------#---------#-------#----#-#------#--#---
//---#-#---#----#-#---#--#-#----#-#----#-#------#---------#-------#----#-#----#-#---#--
//----#----#----#-#----#-#-#----#-#####--######-######----#######--####---####--#----#-
//-------------------------------------------------------------------------------------


        volatile bool uithreadinprocess = false;
        int ctr = 0;

        private void LockingUsingVolatileVariable()
        {
            if (uithreadinprocess == false)
            {
                DisplayTextOnTextBox();
                uithreadinprocess = false;
            }
        }
        
        

//-----#-----#-#######-#######-###-----------#######---------------------------------------#----------------------------
//-----##----#-#----------#----###--####--------#----#----#-#####--######---##---#####-----#--------####---####--#----#-
//-----#-#---#-#----------#-----#--#------------#----#----#-#----#-#-------#--#--#----#----#-------#----#-#----#-#---#--
//-----#--#--#-#####------#----#----####--------#----######-#----#-#####--#----#-#----#----#-------#----#-#------####---
//-###-#---#-#-#----------#-------------#-------#----#----#-#####--#------######-#----#----#-------#----#-#------#--#---
//-###-#----##-#----------#--------#----#-------#----#----#-#---#--#------#----#-#----#----#-------#----#-#----#-#---#--
//-###-#-----#-#######----#---------####--------#----#----#-#----#-######-#----#-#####-----#######--####---####--#----#-
//----------------------------------------------------------------------------------------------------------------------

        static object objlock1 = new object();

        private void LockingUsingDotNetLock()
        {
            lock (objlock1)
            {
                DisplayTextOnTextBox();
            }
        }


//-----#-----#-#######-#######-###-----------#######---------------------------------------#---------------------------------------#####--
//-----##----#-#----------#----###--####--------#----#----#-#####--######---##---#####-----#--------####---####--#----#----#----#-#-----#-
//-----#-#---#-#----------#-----#--#------------#----#----#-#----#-#-------#--#--#----#----#-------#----#-#----#-#---#-----#----#-------#-
//-----#--#--#-#####------#----#----####--------#----######-#----#-#####--#----#-#----#----#-------#----#-#------####------#----#--#####--
//-###-#---#-#-#----------#-------------#-------#----#----#-#####--#------######-#----#----#-------#----#-#------#--#------#----#-#-------
//-###-#----##-#----------#--------#----#-------#----#----#-#---#--#------#----#-#----#----#-------#----#-#----#-#---#------#--#--#-------
//-###-#-----#-#######----#---------####--------#----#----#-#----#-######-#----#-#####-----#######--####---####--#----#------##---#######-
//----------------------------------------------------------------------------------------------------------------------------------------

        static object objlock2 = new object();

        // This will make display correctly, but will queue the events.
        private void LockingUsingDotNetLockOnAnotherThread()
        {
            ThreadStart t = delegate()
            {
                lock (objlock2)
                {
                    DisplayTextOnTextBox();
                }
            };

            new Thread(t).Start();
        }

//-----#-----#-#######-#######-###-----------#######---------------------------------------#---------------------------------------#####--
//-----##----#-#----------#----###--####--------#----#----#-#####--######---##---#####-----#--------####---####--#----#----#----#-#-----#-
//-----#-#---#-#----------#-----#--#------------#----#----#-#----#-#-------#--#--#----#----#-------#----#-#----#-#---#-----#----#-------#-
//-----#--#--#-#####------#----#----####--------#----######-#----#-#####--#----#-#----#----#-------#----#-#------####------#----#--#####--
//-###-#---#-#-#----------#-------------#-------#----#----#-#####--#------######-#----#----#-------#----#-#------#--#------#----#-------#-
//-###-#----##-#----------#--------#----#-------#----#----#-#---#--#------#----#-#----#----#-------#----#-#----#-#---#------#--#--#-----#-
//-###-#-----#-#######----#---------####--------#----#----#-#----#-######-#----#-#####-----#######--####---####--#----#------##----#####--
//----------------------------------------------------------------------------------------------------------------------------------------

        static object objlock3 = new object();

        // This will make display correctly, but will queue the events.
        private void LockingUsingTryMonitorOnAnotherThread()
        {
            ThreadStart t = delegate()
            {
                if (Monitor.TryEnter(objlock3))
                {
                    try
                    {
                        DisplayTextOnTextBox();
                    }
                    finally
                    {
                        Monitor.Exit(objlock3);
                    }
                    

                }
            };

            new Thread(t).Start();
        }





    }
}
